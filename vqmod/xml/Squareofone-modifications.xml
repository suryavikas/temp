
<modification>
    <id>Squareofone-core-behaviour-change</id>
    <version>1.0.0</version>
    <vqmver>2.1.1</vqmver>
    <author>Surya Vikas</author>
    <file name="catalog/controller/common/header.php">
        <operation>
            <search position="replace" offset="145"><![CDATA[protected function index() {]]>
            </search>
            <add><![CDATA[protected function index() {
		$this->data['title'] = $this->document->getTitle();
		
		if (isset($this->request->server['HTTPS']) && (($this->request->server['HTTPS'] == 'on') || ($this->request->server['HTTPS'] == '1'))) {
			$this->data['base'] = $this->config->get('config_ssl');
		} else {
			$this->data['base'] = $this->config->get('config_url');
		}
		$this->data['special'] = $this->url->link('product/special');
		$this->data['description'] = $this->document->getDescription();
		$this->data['keywords'] = $this->document->getKeywords();
		$this->data['links'] = $this->document->getLinks();	 
		$this->data['styles'] = $this->document->getStyles();
		$this->data['scripts'] = $this->document->getScripts();
		$this->data['lang'] = $this->language->get('code');
		$this->data['direction'] = $this->language->get('direction');
		$this->data['google_analytics'] = html_entity_decode($this->config->get('config_google_analytics'), ENT_QUOTES, 'UTF-8');

		// Whos Online
		if ($this->config->get('config_customer_online')) {
			$this->load->model('tool/online');
	
			if (isset($this->request->server['REMOTE_ADDR'])) {
				$ip = $this->request->server['REMOTE_ADDR'];	
			} else {
				$ip = ''; 
			}
			
			if (isset($this->request->server['HTTP_HOST']) && isset($this->request->server['REQUEST_URI'])) {
				$url = 'http://' . $this->request->server['HTTP_HOST'] . $this->request->server['REQUEST_URI'];	
			} else {
				$url = '';
			}
			
			if (isset($this->request->server['HTTP_REFERER'])) {
				$referer = $this->request->server['HTTP_REFERER'];	
			} else {
				$referer = '';
			}
						
			$this->model_tool_online->whosonline($ip, $this->customer->getId(), $url, $referer);
		}
				
		$this->language->load('common/header');
                $this->language->load('module/cart');
		
		if (isset($this->request->server['HTTPS']) && (($this->request->server['HTTPS'] == 'on') || ($this->request->server['HTTPS'] == '1'))) {
			$server = HTTPS_IMAGE;
		} else {
			$server = HTTP_IMAGE;
		}	
				
		if ($this->config->get('config_icon') && file_exists(DIR_IMAGE . $this->config->get('config_icon'))) {
			$this->data['icon'] = $server . $this->config->get('config_icon');
		} else {
			$this->data['icon'] = '';
		}
		
		$this->data['name'] = $this->config->get('config_name');
				
		if ($this->config->get('config_logo') && file_exists(DIR_IMAGE . $this->config->get('config_logo'))) {
			$this->data['logo'] = $server . $this->config->get('config_logo');
		} else {
			$this->data['logo'] = '';
		}
		
		$this->data['text_home'] = $this->language->get('text_home');
		$this->data['text_wishlist'] = sprintf($this->language->get('text_wishlist'), (isset($this->session->data['wishlist']) ? count($this->session->data['wishlist']) : 0));
		$this->data['text_shopping_cart'] = $this->language->get('text_shopping_cart');
    	$this->data['text_search'] = $this->language->get('text_search');
		$this->data['text_welcome'] = sprintf($this->language->get('text_welcome'), $this->url->link('account/login', '', 'SSL'), $this->url->link('account/register', '', 'SSL'));
		$this->data['text_logged'] = sprintf($this->language->get('text_logged'), $this->url->link('account/account', '', 'SSL'), $this->customer->getFirstName(), $this->url->link('account/logout', '', 'SSL'));
		$this->data['text_account'] = $this->language->get('text_account');
    	$this->data['text_checkout'] = $this->language->get('text_checkout');
				
		$this->data['home'] = $this->url->link('common/home');
		$this->data['wishlist'] = $this->url->link('account/wishlist', '', 'SSL');
		$this->data['logged'] = $this->customer->isLogged();
		$this->data['account'] = $this->url->link('account/account', '', 'SSL');
		$this->data['shopping_cart'] = $this->url->link('checkout/cart');
		$this->data['checkout'] = $this->url->link('checkout/checkout', '', 'SSL');

//Added by Surya to accomodate the theme
                $this->data['product_count'] =  $this->cart->countProducts();
                $this->language->load('common/footer');
                $this->data['text_contact'] = $this->language->get('text_contact');
		$this->data['contact'] = $this->url->link('information/contact');
		if (isset($this->request->get['filter_name'])) {
			$this->data['filter_name'] = $this->request->get['filter_name'];
		} else {
			$this->data['filter_name'] = '';
		}
                // Totals
		$this->load->model('setting/extension');
		
		$total_data = array();					
		$total = 0;
		$taxes = $this->cart->getTaxes();
		
		// Display prices
		if (($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) {
			$sort_order = array(); 
			
			$results = $this->model_setting_extension->getExtensions('total');
			
			foreach ($results as $key => $value) {
				$sort_order[$key] = $this->config->get($value['code'] . '_sort_order');
			}
			
			array_multisort($sort_order, SORT_ASC, $results);
			
			foreach ($results as $result) {
				if ($this->config->get($result['code'] . '_status')) {
					$this->load->model('total/' . $result['code']);
		
					$this->{'model_total_' . $result['code']}->getTotal($total_data, $total, $taxes);
				}
				
				$sort_order = array(); 
			  
				foreach ($total_data as $key => $value) {
					$sort_order[$key] = $value['sort_order'];
				}
	
				array_multisort($sort_order, SORT_ASC, $total_data);			
			}		
		}
		
		$this->data['totals'] = $total_data;
                
		$this->data['text_items'] = sprintf($this->language->get('text_items'), $this->cart->countProducts() + (isset($this->session->data['vouchers']) ? count($this->session->data['vouchers']) : 0), $this->currency->format($total));
		$this->data['text_empty'] = $this->language->get('text_empty');
		$this->data['text_cart'] = $this->language->get('text_cart');
		// Menu
		$this->load->model('catalog/category');
		
		$this->load->model('catalog/product');
		
		$this->data['categories'] = array();
					
		$categories = $this->model_catalog_category->getCategories(0);
		
		foreach ($categories as $category) {
			if ($category['top']) {
				$children_data = array();

				$children = $this->model_catalog_category->getCategories($category['category_id']);

				foreach ($children as $child) {
					$data = array(
						'filter_category_id'  => $child['category_id'],
						'filter_sub_category' => true
					);

					//$product_total = $this->model_catalog_product->getTotalProducts($data);


                                        $children_level2 = $this->model_catalog_category->getCategories($child['category_id']);

                                        $children_data_level2 = array();
                                        if($children_level2){
                                            foreach ($children_level2 as $child_level2) {
                                                $children_data_level2[] = array(
                                                    'name'  => $child_level2['name'],
                                                    'href'  => $this->url->link('product/category', 'path=' . $category['category_id'] . '_' . $child['category_id'] . '_' . $child_level2['category_id'])
                                                );
                                            }
                                        }
                                        $children_data[] = array(
						'name'  => $child['name'] ,
						'href'  => $this->url->link('product/category', 'path=' . $category['category_id'] . '_' . $child['category_id']),
                                                'children' => $children_data_level2
					);

				}

				// Level 1
				$this->data['categories'][] = array(
					'name'     => $category['name'],
					'children' => $children_data,
					'column'   => $category['column'] ? $category['column'] : 1,
					'href'     => $this->url->link('product/topcategory', 'tpath=' . $category['category_id'])
				);
			}
		}
                if (isset($this->request->get['filter_name'])) {
			$this->data['filter_name'] = $this->request->get['filter_name'];
		} else {
			$this->data['filter_name'] = $this->language->get('text_search');
		}
                if (isset($this->request->get['filter_category_id'])) {
                    $this->data['filter_category_id'] = $this->request->get['filter_category_id'];
                } else {
                    $this->data['filter_category_id'] = 0;
                }

		// 3 Level Category Search
		$this->data['categories_dropdown'] = array();
                $categories_1 = $categories;
                
		foreach ($categories_1 as $category_1) {
			$level_2_data = array();
               
			$categories_2 = $this->model_catalog_category->getCategories($category_1['category_id']);

			foreach ($categories_2 as $category_2) {
				$level_3_data = array();

				$categories_3 = $this->model_catalog_category->getCategories($category_2['category_id']);

				foreach ($categories_3 as $category_3) {
					$level_3_data[] = array(
						'category_id' => $category_3['category_id'],
						'name'        => $category_3['name'],
					);
				}

				$level_2_data[] = array(
					'category_id' => $category_2['category_id'],
					'name'        => $category_2['name'],
					'children'    => $level_3_data
				);
			}

			$this->data['categories_dropdown'][] = array(
				'category_id' => $category_1['category_id'],
				'name'        => $category_1['name'],
				'children'    => $level_2_data
			);
		}
                $this->language->load('product/search');
                $this->data['text_category'] = $this->language->get('text_category');
		$this->children = array(
			'module/language',
			'module/currency',
			'module/cart'
		);
				
		if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/common/header.tpl')) {
			$this->template = $this->config->get('config_template') . '/template/common/header.tpl';
		} else {
			$this->template = 'default/template/common/header.tpl';
		}
		
    	$this->render();
	}
	}
?>]]>
            </add>
        </operation>
    </file>
    <file name="catalog/model/catalog/product.php">
        <operation>
            <search position="replace"><![CDATA[$product_data[$result['product_id']] = $this->getProduct($result['product_id']);]]>
            </search>
            <add><![CDATA[ $products = $this->getProduct($result['product_id']);
                                    $products['discounts'] = $this->getProductDiscounts($result['product_id']);
                                    $temp = $products['price'];
                                    $discountedPrice = $products['special'];  
                                    $discount = ((($temp - $discountedPrice)/$temp)*100);
                                    $products['discount_percentage'] = $discount;
                                    $product_data[$result['product_id']] = $products;]]>
            </add>
        </operation>
        <operation>
            <search position="before"><![CDATA[	public function getTotalProductSpecials() {]]>
            </search>
            <add><![CDATA[public function getMostViewedProducts($limit) {
                if ($this->customer->isLogged()) {
			$customer_group_id = $this->customer->getCustomerGroupId();
		} else {
			$customer_group_id = $this->config->get('config_customer_group_id');
		}
		$sql = "SELECT p.*, pd.name, ps.price as special FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_to_store p2s ON (p.product_id = p2s.product_id) JOIN " . DB_PREFIX . "product_description pd ON p.product_id = pd.product_id LEFT JOIN " . DB_PREFIX . "product_special ps ON (ps.product_id = p.product_id AND ((ps.date_start = '0000-00-00' OR ps.date_start < NOW())
                        AND (ps.date_end = '0000-00-00' OR ps.date_end > NOW()))) WHERE p.status = '1' AND p.date_available <= NOW() AND p.viewed > 0 AND p2s.store_id = '" . (int)$this->config->get('config_store_id') . "' ORDER BY p.viewed, p.date_added DESC LIMIT " . (int)$limit;

		$query = $this->db->query($sql);

		return $query->rows;
                        }
               ]]>
            </add>
        </operation>


    </file>
    <file name="catalog/language/english/common/header.php">
        <operation>
            <search position="replace"><![CDATA[$_['text_welcome']        = 'Welcome visitor you can <a href="%s">login</a> or <a href="%s">create an account</a>.';]]>
            </search>
            <add><![CDATA[$_['text_welcome']        = '<a href="%s">Login</a> | <a href="%s">Sign up</a>.';]]>
            </add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[$_['text_search']         = 'Search';]]>
            </search>
            <add><![CDATA[$_['text_search']         = 'Search for items';

                        ]]>
            </add>
        </operation>
    </file>
    <file name="catalog/controller/common/footer.php">
        <operation>
            <search position="replace" offset="54"><![CDATA[protected function index() {]]>
            </search>
            <add><![CDATA[protected function index() {
		$this->language->load('common/footer');

		$this->data['text_information'] = $this->language->get('text_information');
		$this->data['text_service'] = $this->language->get('text_service');
		$this->data['text_extra'] = $this->language->get('text_extra');
		$this->data['text_contact'] = $this->language->get('text_contact');
		$this->data['text_return'] = $this->language->get('text_return');
                $this->data['text_sitemap'] = $this->language->get('text_sitemap');
		$this->data['text_manufacturer'] = $this->language->get('text_manufacturer');
		$this->data['text_voucher'] = $this->language->get('text_voucher');
		$this->data['text_affiliate'] = $this->language->get('text_affiliate');
		$this->data['text_special'] = $this->language->get('text_special');
		$this->data['text_account'] = $this->language->get('text_account');
		$this->data['text_order'] = $this->language->get('text_order');
		$this->data['text_wishlist'] = $this->language->get('text_wishlist');
		$this->data['text_newsletter'] = $this->language->get('text_newsletter');
                $this->data['best_seller'] = $this->language->get('best_seller');

		$this->load->model('catalog/information');

		$this->data['informations'] = array();

		foreach ($this->model_catalog_information->getInformations() as $result) {
      		$this->data['informations'][] = array(
        		'title' => $result['title'],
	    		'href'  => $this->url->link('information/information', 'information_id=' . $result['information_id'])
      		);
    	}

		$this->data['contact'] = $this->url->link('information/contact');
		$this->data['return'] = $this->url->link('account/return/insert', '', 'SSL');
                $this->data['sitemap'] = $this->url->link('information/sitemap');
		$this->data['manufacturer'] = $this->url->link('product/manufacturer');
		$this->data['voucher'] = $this->url->link('account/voucher', '', 'SSL');
		$this->data['affiliate'] = $this->url->link('affiliate/account', '', 'SSL');
		$this->data['special'] = $this->url->link('product/special');
		$this->data['account'] = $this->url->link('account/account', '', 'SSL');
		$this->data['order'] = $this->url->link('account/order', '', 'SSL');
		$this->data['wishlist'] = $this->url->link('account/wishlist', '', 'SSL');
		$this->data['newsletter'] = $this->url->link('account/newsletter', '', 'SSL');

//		$this->data['powered'] = sprintf($this->language->get('text_powered'), $this->config->get('config_name'), date('Y', time()));

                $this->load->model('catalog/product');

		$this->load->model('tool/image');

		$this->data['best_sellers'] = array();
                //Hard coded count value
		$results = $this->model_catalog_product->getBestSellerProducts(5);
		foreach ($results as $result) {

                    $this->data['best_sellers'][] = array(
                            'name'    	 => $result['name'],
                            'href'    	 => $this->url->link('product/product', 'product_id=' . $result['product_id']),
                    );
		}

		if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/common/footer.tpl')) {
			$this->template = $this->config->get('config_template') . '/template/common/footer.tpl';
		} else {
			$this->template = 'default/template/common/footer.tpl';
		}

		$this->render();
	}
}
?>]]>
            </add>
        </operation>
    </file>
    <file name="catalog/language/english/common/footer.php">
        <operation>
            <search position="replace"><![CDATA[$_['text_powered']      = 'Powered By <a href="http://www.opencart.com">OpenCart</a><br /> %s &copy; %s';]]>
            </search>
            <add><![CDATA[$_['best_seller']       = 'Best Seller';]]>
            </add>
        </operation>
    </file>
	<!-- <file name="system/library/image.php">
		<operation>
			<search position="replace"><![CDATA[$background = imagecolorallocate($this->image, 255, 255, 255);]]></search>
			<add><![CDATA[$background = imagecolorallocate($this->image, 255, 255, 255);]]></add>
		</operation>
	</file> -->
    <file name="catalog/language/english/account/register.php">
        <operation>
            <search position="replace"><![CDATA[$_['entry_telephone']      = 'Telephone:';]]>
            </search>
            <add><![CDATA[$_['entry_telephone']      = 'Mobile:';]]>
            </add>
        </operation>
    </file>
    <file name="catalog/language/english/checkout/checkout.php">
        <operation>
            <search position="replace"><![CDATA[$_['entry_telephone']                = 'Telephone:';]]>
            </search>
            <add><![CDATA[$_['entry_telephone']                = 'Mobile:';]]>
            </add>
        </operation>
    </file>
    <file name="catalog/controller/module/cart.php">
        <operation>
            <search position="replace"><![CDATA[		$this->data['checkout'] = $this->url->link('checkout/checkout', '', 'SSL');]]>
            </search>
            <add><![CDATA[		$this->data['checkout'] = $this->url->link('checkout/onepagecheckout', '', 'SSL');]]>
            </add>
        </operation>
    </file>
    <file name="catalog/controller/checkout/cart.php">
        <operation>
            <search position="replace"><![CDATA[		$this->data['checkout'] = $this->url->link('checkout/checkout', '', 'SSL');]]>
            </search>
            <add><![CDATA[		$this->data['checkout'] = $this->url->link('checkout/onepagecheckout', '', 'SSL');]]>
            </add>
        </operation>
    </file>
    <file name="catalog/controller/common/seo_url.php">
        <operation>
            <search position="replace" offset="117"><![CDATA[<?php]]>
            </search>
            <add><![CDATA[<?php class ControllerCommonSeoUrl extends Controller {
                /* SEO Custom URL */
                    private $url_list = array (
                                    'common/home'       => 'home',                                    
                                    'account/register'  => 'register',
                                    'account/wishlist'  => 'wishlist',
                                    'checkout/checkout' => 'checkout',
                                    'account/login'     => 'login',
                                    'product/special'   => 'special',
                                    'affiliate/account' => 'affiliate',
                                    'checkout/voucher'  => 'voucher',
                                    'product/manufacturer' => 'brand',
                                    'account/newsletter'   => 'newsletter',
                                    'account/order'        => 'order',
                                    'account/account'      => 'account',
                                    'information/contact'  => 'contact-us',
                                    'account/return/insert' => 'return/insert',
                                    'information/sitemap'   => 'sitemap',
                        );
                    /* SEO Custom URL */
                    public function index() {

                            // Add rewrite to url class
                            if ($this->config->get('config_seo_url')) {
                                    $this->url->addRewrite($this);
                            }

                            // Decode URL
                            if (isset($this->request->get['_route_'])) {
                                    $parts = explode('/', $this->request->get['_route_']);

                                    foreach ($parts as $part) {
                                            $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "url_alias WHERE keyword = '" . $this->db->escape($part) . "'");

                                            if ($query->num_rows) {
                                                    $url = explode('=', $query->row['query']);

                                                    if ($url[0] == 'product_id') {
                                                            $this->request->get['product_id'] = $url[1];
                                                    }

                                                    if ($url[0] == 'category_id') {
                                                            $this->load->model('catalog/category');
                                                            $category_info = $this->model_catalog_category->getCategory($url[1]);
                                                            if($category_info['parent_id'] == 0){
                                                                if (!isset($this->request->get['path'])) {
                                                                    $this->request->get['tpath'] = $url[1];
                                                                } else {
                                                                        $this->request->get['tpath'] .= '_' . $url[1];
                                                                }
                                                            } else{
                                                                if (!isset($this->request->get['path'])) {
                                                                    $this->request->get['path'] = $url[1];
                                                                } else {
                                                                        $this->request->get['path'] .= '_' . $url[1];
                                                                }
                                                            }

                                                    }

                                                    if ($url[0] == 'manufacturer_id') {
                                                            $this->request->get['manufacturer_id'] = $url[1];
                                                    }

                                                    if ($url[0] == 'information_id') {
                                                            $this->request->get['information_id'] = $url[1];
                                                    }
                                            } else {
                                                    /* SEO Custom URL */
                                                    if ( $_s = $this->setURL($this->request->get['_route_']) ) {
                                                            $this->request->get['route'] = $_s;
                                                    }/* SEO Custom URL */
                                                    if(!isset($this->request->get['route']))
                                                        $this->request->get['route'] = 'error/not_found';
                                            }
                                    }

                                    if (isset($this->request->get['product_id'])) {
                                            $this->request->get['route'] = 'product/product';
                                    } elseif (isset($this->request->get['path'])) {
                                            $this->request->get['route'] = 'product/category';
                                    } elseif (isset($this->request->get['tpath'])) {
                                            $this->request->get['route'] = 'product/topcategory';
                                    } elseif (isset($this->request->get['manufacturer_id'])) {
                                            $this->request->get['route'] = 'product/manufacturer/info';
                                    } elseif (isset($this->request->get['information_id'])) {
                                            $this->request->get['route'] = 'information/information';
                                    }

                                    if (isset($this->request->get['route'])) {
                                            return $this->forward($this->request->get['route']);
                                    }
                            }
                    }

                    public function rewrite($link) {
                            if ($this->config->get('config_seo_url')) {
                                    $url_data = parse_url(str_replace('&amp;', '&', $link));

                                    $url = '';

                                    $data = array();

                                    parse_str($url_data['query'], $data);

                                    foreach ($data as $key => $value) {
                                            $url = '';
                                            if (isset($data['route'])) {
                                                    if (($data['route'] == 'product/product' && $key == 'product_id') || (($data['route'] == 'product/manufacturer/info' || $data['route'] == 'product/product') && $key == 'manufacturer_id') || ($data['route'] == 'information/information' && $key == 'information_id')) {
                                                            $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "url_alias WHERE `query` = '" . $this->db->escape($key . '=' . (int)$value) . "'");
                                                            $url .= '/india/buy-now';
                                                            if ($query->num_rows) {
                                                                    $url .= '/' . $query->row['keyword'];

                                                                    unset($data[$key]);
                                                            }
                                                            
                                                    } elseif ($key == 'path') {
                                                            $categories = explode('_', $value);
                                                            $url .= '/india/fashion';
                                                            foreach ($categories as $category) {
                                                                    $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "url_alias WHERE `query` = 'category_id=" . (int)$category . "'");

                                                                    if ($query->num_rows) {
                                                                            $url .= '/' . $query->row['keyword'];
                                                                    }
                                                            }

                                                            unset($data[$key]);
                                                    } elseif ($key == 'tpath') {
                                                            $categories = explode('_', $value);
                                                            $url .= '/india/fashion';
                                                            foreach ($categories as $category) {
                                                                    $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "url_alias WHERE `query` = 'category_id=" . (int)$category . "'");

                                                                    if ($query->num_rows) {
                                                                            $url .= '/' . $query->row['keyword'];
                                                                    }
                                                            }

                                                            unset($data[$key]);
                                                    }
                                            }
                                    }

                                    if ($url) {
                                            unset($data['route']);

                                            $query = '';

                                            if ($data) {
                                                    foreach ($data as $key => $value) {
                                                            $query .= '&' . $key . '=' . $value;
                                                    }

                                                    if ($query) {
                                                            $query = '?' . trim($query, '&');
                                                    }
                                            }

                                            return $url_data['scheme'] . '://' . $url_data['host'] . (isset($url_data['port']) ? ':' . $url_data['port'] : '') . str_replace('/index.php', '', $url_data['path']) . $url . $query;
                                    } else {

                                            /* SEO Custom URL */
                                            $_u = $this->getURL($data['route']);
                                            unset($data[$key]);
                                            if(!empty($_u)){
                                                $link = $_u;
                                            }
                                            /* SEO Custom URL */
                                            return $link;
                                    }
                            } else {
                                    return $link;
                            }
                    }
                    /* SEO Custom URL */
                    public function getURL($route) {
                            if( count($this->url_list) > 0) {
                                foreach ($this->url_list as $key => $value) {
                                    if($route == $key) {
                                        return '/'.$value;
                                    }
                                }
                            }
                            return false;
                    }
                    public function setURL($_route) {
                            if( count($this->url_list) > 0 ){
                                foreach ($this->url_list as $key => $value) {
                                    if($_route == $value) {
                                        return $key;
                                    }
                                }
                            }
                            return false;
                    }/* SEO Custom URL */
            }
            ]]>
            </add>
        </operation>
    </file>


	
</modification>